
 1. Create a file called maxSeq.c and write the function:
      size_t  maxSeq(int * array, size_t n);
    which returns the length of the maximum increasing contiguous subsequence
    in the array.  The parameter n specifies the length fo the array  For example,
    if the array passed in were
   
     { 1, 2, 1, 3, 5, 8, 2, 4, 6, 9}
  
    this function would return 4 because the longest sequence
    of (strictly) increasing numbers in that array is 1, 3, 5, 8
    which has length 4.  Note that 1,3,5,8,9 is an increasing
    subsequence, but is not contiguous (finding discontiguous 
    ones efficiently takes techniques we haven't learned yet).

    Note that the subsequence just needs to be increasing, not
    increasing by any particular pattern or rate.

 2. Compile and test your code using the test-subseq.c you wrote previously.
    (as before, compile the .c files separately, and link them together).

 3. Submit your code for maxSeq.c
     

Hint:
  Can you abstract a complex step out into a simple function?