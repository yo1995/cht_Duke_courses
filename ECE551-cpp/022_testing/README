In this assignment, you will be black-box testing a few 
broken implementations of "isPrime".  You will see
that there are four broken implementations of isPrime:

isPrime-broken1 1
isPrime-broken2 9901 131071
isPrime-broken3 0.1
isPrime-broken4 -4

as well as a correct implementation:

isPrime-correct

All of these take one command line argument, which is the number
to test for primality.  For example, you might run

$ ./isPrime-correct  3
3 is prime
$ ./isPrime-correct 4
4 is not prime

Your job is to find a test case for each broken implementation which
shows that it is not correct---that is, where its behavior differs
from that of isPrime-correct.

For each broken program, write the input which breaks the program
into a file called "input.X" where X is 1, 2, 3, or 4 (so input.1 has
the command line argument that shows that isPrime-broken1 is broken).

Note that isPrime-correct's behavior is considered correct, and
any test case which deviates from it is considered wrong.
 